services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
        - .:/app
    ports:
      - "8081:8080"
    networks:
      - 'spring-boot-local'
    environment:
      DB_URL: '${DB_URL}'
      DB_USERNAME: '${DB_USERNAME}'
      DB_PASSWORD: '${DB_PASSWORD}'
      REDIS_HOST: '${REDIS_HOST}'
      REDIS_PORT: '${REDIS_PORT}'
      REDIS_PASSWORD: '${REDIS_PASSWORD}'
#      SPRING_PROFILES_ACTIVE: Local
    depends_on:
      - pgsql
      - redis
  pgsql:
    image: postgres:15
    ports:
      - '${FORWARD_DB_PORT:-5432}:5432'
    environment:
      PGPASSWORD: '${DB_PASSWORD}'
      POSTGRES_DB: '${DB_DATABASE}'
      POSTGRES_USER: '${DB_USERNAME}'
      POSTGRES_PASSWORD: '${DB_PASSWORD}'
    volumes:
      - 'pgsql-data-local:/var/lib/postgresql/data'
      - './db-init:/docker-entrypoint-initdb.d'
    networks:
      - 'spring-boot-local'
    healthcheck:
      test: ['CMD', 'pg_isready', '-q', '-d', '${DB_DATABASE}', '-U', '${DB_USERNAME}']
      retries: 3
      timeout: 5s
  redis:
    image: 'redis:alpine'
    ports:
      - '${FORWARD_REDIS_PORT:-6379}:6379'
    command: [ 'redis-server', '--requirepass', '${REDIS_PASSWORD}' ]
    volumes:
      - 'redis-data-local:/data'
    networks:
      - 'spring-boot-local'
    healthcheck:
      test: [ 'CMD', 'redis-cli', 'ping' ]
      retries: 3
      timeout: 5s
networks:
  spring-boot-local:
    driver: bridge
volumes:
  pgsql-data-local:
    driver: local
  redis-data-local:
    driver: local
